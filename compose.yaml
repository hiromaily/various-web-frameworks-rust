volumes:
  pgdata: {}

name: web-fw
services:
  actix-server:
    container_name: actix-web-server
    build:
      context: .
      dockerfile: ./docker/Dockerfile_rust
    ports:
      - "8080:8080"
    environment:
      RUST_LOG: debug
      RUST_BACKTRACE: full
    #restart: always
    depends_on:
      postgresql:
        condition: service_healthy
    #command: bash -c "cd /usr/local/bin && ls"
    command: "/usr/local/bin/actix container.toml"
    networks:
      - app-network

  axum-server:
    container_name: axum-web-server
    build:
      context: .
      dockerfile: ./docker/Dockerfile_rust
    ports:
      - "8080:8080"
    environment:
      RUST_LOG: debug
      RUST_BACKTRACE: full
    #restart: always
    depends_on:
      postgresql:
        condition: service_healthy
    #command: bash -c "cd /usr/local/bin && ls"
    command: "/usr/local/bin/axumfw container.toml"
    networks:
      - app-network

  postgresql:
    container_name: webfw-postgresql
    build:
      context: ./docker
      dockerfile: Dockerfile_pg
      target: "database"
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: example
      TZ: Asia/Tokyo
    #restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 3s
      timeout: 10s
      retries: 10
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
