// Generated by diesel_ext
// then edited

#![allow(unused)]
#![allow(clippy::all)]

use crate::schemas::diesel::schema::users as diesel_users;
use chrono::NaiveDateTime;
use diesel::deserialize::{self, FromSql, Queryable};
use diesel::prelude::*;
//use diesel::sql_types::Text;

// Note: this User must have same filed to schema::users
#[derive(Debug, Queryable, Selectable)]
#[diesel(table_name = diesel_users)]
#[diesel(check_for_backend(diesel::pg::Pg))]
pub struct User {
    pub id: i32,
    pub first_name: String,
    pub last_name: String,
    pub email: String,
    pub password: String,
    pub is_admin: bool,
    pub created_at: Option<NaiveDateTime>,
}

#[derive(Insertable, Debug)]
#[diesel(table_name = diesel_users)]
pub struct CreateUser<'a> {
    pub first_name: &'a str,
    pub last_name: &'a str,
    pub email: &'a str,
    pub password: &'a str,
    pub is_admin: bool,
}

// Added
// use diesel::deserialize::FromSqlRow;
// use diesel::expression::AsExpression;
// use diesel::sql_types;

// #[derive(Debug, AsExpression, FromSqlRow)]
// #[diesel(sql_type = Text)]
// pub enum TodoStatus {
//     Pending,
//     Doing,
//     Canceled,
//     Done,
// }
